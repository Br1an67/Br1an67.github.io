[{"content":"0.运行环境 了解基本的终端命令行使用 安装 Git ，并且了解基本的 Git 知识，推荐学习工具：Learn Git Branching, Git and GitHub learning resources - GitHub Docs 拥有 GitHub 账号 1.安装Hugo Installation | Hugo\n了解基本的终端命令行使用 安装 Git ，并且了解基本的 Git 知识，推荐学习工具：Learn Git Branching 拥有 GitHub 账号 注意这里要安装extended版本。\n推荐 Windows 用户使用 winget 进行安装，\nWinget is Microsoft’s official free and open-source package manager for Windows.\nTo install the extended edition of Hugo: winget install Hugo.Hugo.Extended\n下载完成后，输入: hugo version 以检查是否安装成功，若出现版本信息则表示安装成功。\n2.创建 GitHub Pages 仓库 2.1 命名GitHub Pages仓库，格式为\u0026lt;username.github.io\u0026gt;,其中\u0026lt;username\u0026gt;是自己的 GitHub 的用户名。\n2.2 ✔勾选Public,设置为公开仓库。\n2.3 ✔勾选添加README文件。\n3.使用Hugo新建站点 命令行输入hugo new site \u0026lt;sitename\u0026gt;\n后续命令行指令默认在\u0026lt;sitename\u0026gt;根目录下运行\n创建完成后，根目录包含以下文件\n. ├── archetypes: default.md #生成博客文章的模版 ├── assets # 存放被 Hugo Pipes 处理的文件 ├── content # 存放markdown文件作为博客内容 ├── data # 存放 Hugo 处理的数据 ├── layouts # 存放布局文件 ├── static # 存放静态文件 图片 CSS JS文件 ├── themes: 存放不同的主题 └── hugo.toml: 博客配置文件支持 JSON YAML TOML 三种格式配置文件 4.选择Hugo主题 为了实现快速搭建节省时间，也推荐直接下载修改后的模板。\nblog-hugo-theme-LoveIt\nsulv-hugo-papermod\n另，从社区中选择主题\nComplete List | Hugo Themes\n推荐主题：\nStack | Hugo Themes\nPaper | Hugo Themes\nGitHub - adityatelange/hugo-PaperMod: A fast, clean, responsive Hugo theme.\n以主题Paper为例，GitHub对应仓库中README文件中有安装说明，将主题文件git clone到\u0026lt;sitename\u0026gt;/themes文件夹中，并根据提示修改config.toml。\n5.新建博客文章 使用hugo new posts/\u0026lt;postname\u0026gt;.md命令以使用archetypes/default.md模板文件在\u0026lt;sitename\u0026gt;/content/posts目录下新建\u0026lt;postname\u0026gt;.md。\n关于模板文件以及相关front matter配置，请参考官方文档Front matter | Hugo\n6.将博客部署到GitHub 在编辑完成后，使用hugo命令进行构建。\nHugo将构建后的网站内容保存在博客根目录下的public文件夹中，接下来使用Git工具将public文件夹的内容提交到\u0026lt;username.github.io\u0026gt;仓库。\n也可以选择部署到云服务器上，具体参考Sulv的教程hugo博客部署到腾讯云轻量级服务器 | Sulv\u0026rsquo;s Blog\n笔者选择使用 Github Pages 发布静态博客\n优点：\n仅需一个 GitHub 账号和简单配置即可将静态博客发布到 GitHub Pages； 没有维护的时间成本, 可以将精力更多的放到博客内容本身上去； 无需备案； 无需 SSL 证书； 缺点：\n访问速度较慢 访问速度较慢 访问速度较慢 7.常用操作 常用命令：\n# 新建文章 hugo new posts/hello_world.md # 文件位置为content/posts/hello_world.md # 构建Hugo网站 hugo # 本地预览 http://localhost:1313/ -D后缀表示应用草稿 hugo server -D # 使用这个命令覆盖生成新的public文件夹 hugo -F --cleanDestinationDir 输入hugo的生成方式只会往public文件夹里添加内容，但是不会删除外部已经不存在而public里面还存在的文件。\n在博客中添加本地图片：\n将图片放到static文件夹下，以static为相对路径进行引用，如![](pic_name.png)。\n推荐使用文件夹对图片进行统一管理，图片放到static/imgs文件夹下，引用格式为![](/imgs/pic_name.png)。\nmarkdown调整图片位置和大小，嵌入HTML代码：\n\u0026lt;!-- 固定宽高 width=200 height=100 --\u0026gt; \u0026lt;div align=left\u0026gt; \u0026lt;img src=https://img-blog.csdnimg.cn/20200822014538211.png width=60% /\u0026gt; \u0026lt;/div\u0026gt; 8.细节优化 Features · adityatelange/hugo-PaperMod Wiki · GitHub\n8.1 自定义博客域名 替换\u0026lt;username\u0026gt;.github.io\n选择在阿里云注册域名，使用cloudflare进行域名解析。\n在Github Pages对应仓库--Settings--Pages--Custom domain中绑定自己购买的域名。\n8.2 引入twikoo评论系统 Twikoo | 一个简洁、安全、免费的静态网站评论系统\nTwikoo Vercel 部署教程_哔哩哔哩_bilibili\n选择部署在Vercel平台，发现国内无法访问\n8.2.1 添加自定义表情包 Twikoo 添加自定义表情包 | 云晓晨CatchYun 给twikoo添加自定义表情包 | 前尘小筑\n8.2.2 表情包资源 表情速查\nGitHub - 2X-ercha/Twikoo-Magic: Twikoo自定义表情列表\ncdn/src/emojis at master · Irithys/cdn · GitHub\n8.2.3 利用 GitHub 标签与仓库镜像添加自定义表情 创建自己的表情预设 | Waline\njsDelivr - A free, fast, and reliable CDN for JS and open source\n8.3 关于博客的图标 iconfont-阿里巴巴矢量图标库\nEmoji表情1\nEmoji表情2\n8.4 修改字体 使用CDN，修改代码字体为JetBrains Mono，博客字体为霞鹭文楷。\n在 PaperMod 博客中设置自定义字体 | Aimer\u0026rsquo;s Blog\n修改全局字体：\n在 Google Fonts 中查询开源字体，以 JetBrains Mono 为例，Google Fonts 会生成 HTML 和 css ，将 HTML 插入到 layouts/partials/extend_head.html 中，将 CSS 插入到 assets/css/extended/blank.css：\nbody { font-family: \u0026#34;LXGWWenKai\u0026#34;, sans-serif; } 修改代码字体，将 CSS 插入到 assets/css/extended/code.css：\n.post-content pre,code { font-family: \u0026#39;JetBrains Mono\u0026#39;, monospace; } 8.5 个人博客增加打赏功能 Hugo - 个人博客添加打赏功能\n9.遇到的问题 9.1 解决国内无法访问Vercel 国内访问不了Vercel上绑定的域名?\nvercel部署添加域名国内加速\n9.2 修改js/css文件后本地预览没有更新 浏览器强制刷新，Mac：Command + Shift + R，Windows：Ctrl + Shift + R。\n关闭hugo server，再重新开启，再刷新网站。\n9.3 cdn.jsdelivr.net在国内无法访问 cdn.jsdelivr.net 可能在国内受到污染，可以将 cdn.jsdelivr.net 换成 gcore.jsdelivr.net，或代理cdn.jsdelivr.net使用。\nReference [1] hugo博客搭建 | PaperMod主题 | Sulv\u0026rsquo;s Blog\n[2] 如何用 GitHub Pages + Hugo 搭建个人博客 · 小绵尾巴\n[3] Github Pages + Hugo 搭建个人博客 - 渣渣的夏天\n[4] Hugo + PaperMod搭建技术博客 | Kunyang\u0026rsquo;s Blog\n[5] Hugo+PaperMod 双语博客搭建 Home-Info+Profile Mode - YUNYI BLOG\n","permalink":"https://shiziblog.cn/posts/blog/hugo_build/","summary":"0.运行环境 了解基本的终端命令行使用 安装 Git ，并且了解基本的 Git 知识，推荐学习工具：Learn Git Branching, Git and GitHub learning resources - GitHub Docs 拥有 GitHub 账号 1.安装Hugo Installation | Hugo 了解基本的终端命令行使用 安装 Git ，并且了解基本的 Git 知识，推荐学习工具：Learn Git Branching 拥有 GitHub 账号 注意这里要安装extended版本。 推荐 Windows 用户","title":"Hugo博客搭建记录"},{"content":"","permalink":"https://shiziblog.cn/posts/blog/blog/","summary":"","title":"Blog"},{"content":"","permalink":"https://shiziblog.cn/posts/life/life/","summary":"","title":"Life"},{"content":"","permalink":"https://shiziblog.cn/posts/unclassified/life/","summary":"","title":"Life"},{"content":"","permalink":"https://shiziblog.cn/posts/read/read/","summary":"","title":"Read"},{"content":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 \u0026lt;/div\u0026gt; ","permalink":"https://shiziblog.cn/posts/tech/tech/","summary":"\u0026lt;div\u0026gt; 科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代码 科技代","title":"Tech"},{"content":"\r👉友链格式\r名称： 柿子的自留地 网址： https://shiziblog.cn 图标： https://shiziblog.cn/img/shizi.png 描述： 柿柿柿 👉友链申请要求\r欢迎联系，秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内\n","permalink":"https://shiziblog.cn/links/","summary":"👉友链格式 名称： 柿子的自留地 网址： https://shiziblog.cn 图标： https://shiziblog.cn/img/shizi.png 描述： 柿柿柿 👉友链申请要求 欢迎联系，秉承互换友链原则、文章定期更新、不能有太多广告、个人描述字数控制在15字内","title":"🤝友链"},{"content":" 能在众多博客中与你相遇，是一种缘分。\n关于我\n英文名: Br1an Shuai 运动: 羽毛球，跑步 本博客于2024年7月2日起运行。\n待完善\u0026hellip;\n","permalink":"https://shiziblog.cn/about/","summary":"能在众多博客中与你相遇，是一种缘分。 关于我 英文名: Br1an Shuai 运动: 羽毛球，跑步 本博客于2024年7月2日起运行。 待完善\u0026hellip;","title":"欢迎来访"},{"content":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找\nscan总共有这几种命令：scan、sscan、hscan、zscan，分别用于迭代数据库中的：数据库中所有键、集合键、哈希键、有序集合键，命令具体结构如下：\nscan cursor [MATCH pattern] [COUNT count] [TYPE type] sscan key cursor [MATCH pattern] [COUNT count] hscan key cursor [MATCH pattern] [COUNT count] zscan key cursor [MATCH pattern] [COUNT count] 2. scan scan cursor [MATCH pattern] [COUNT count] [TYPE type]，cursor表示游标，指查询开始的位置，count默认为10，查询完后会返回下一个开始的游标，当返回0的时候表示所有键查询完了\n127.0.0.1:6379[2]\u0026gt; scan 0 1) \u0026#34;3\u0026#34; 2) 1) \u0026#34;mystring\u0026#34; 2) \u0026#34;myzadd\u0026#34; 3) \u0026#34;myhset\u0026#34; 4) \u0026#34;mylist\u0026#34; 5) \u0026#34;myset2\u0026#34; 6) \u0026#34;myset1\u0026#34; 7) \u0026#34;mystring1\u0026#34; 8) \u0026#34;mystring3\u0026#34; 9) \u0026#34;mystring4\u0026#34; 10) \u0026#34;myset\u0026#34; 127.0.0.1:6379[2]\u0026gt; scan 3 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;myzadd1\u0026#34; 2) \u0026#34;mystring2\u0026#34; 3) \u0026#34;mylist2\u0026#34; 4) \u0026#34;myhset1\u0026#34; 5) \u0026#34;mylist1\u0026#34; MATCH可以采用模糊匹配找出自己想要查找的键，这里的逻辑是先查出20个，再匹配，而不是先匹配再查询，这里加上count 20是因为默认查出的10个数中可能不能包含所有的相关项，所以把范围扩大到查20个，我这里测试的键总共有15个\n127.0.0.1:6379[2]\u0026gt; scan 0 match mylist* count 20 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; TYPE可以根据具体的结构类型来匹配该类型的键\n127.0.0.1:6379[2]\u0026gt; scan 0 count 20 type list 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;mylist\u0026#34; 2) \u0026#34;mylist2\u0026#34; 3) \u0026#34;mylist1\u0026#34; 3. sscan sscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是集合类型的key\n127.0.0.1:6379[2]\u0026gt; sadd myset1 a b c d (integer) 4 127.0.0.1:6379[2]\u0026gt; smembers myset1 1) \u0026#34;d\u0026#34; 2) \u0026#34;a\u0026#34; 3) \u0026#34;c\u0026#34; 4) \u0026#34;b\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;d\u0026#34; 2) \u0026#34;c\u0026#34; 3) \u0026#34;b\u0026#34; 4) \u0026#34;a\u0026#34; 127.0.0.1:6379[2]\u0026gt; sscan myset1 0 match a 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;a\u0026#34; 4. hscan hscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是哈希类型的key\n127.0.0.1:6379[2]\u0026gt; hset myhset1 kk1 vv1 kk2 vv2 kk3 vv3 (integer) 3 127.0.0.1:6379[2]\u0026gt; hgetall myhset1 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 127.0.0.1:6379[2]\u0026gt; hscan myhset1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;kk1\u0026#34; 2) \u0026#34;vv1\u0026#34; 3) \u0026#34;kk2\u0026#34; 4) \u0026#34;vv2\u0026#34; 5) \u0026#34;kk3\u0026#34; 6) \u0026#34;vv3\u0026#34; 5. zscan zscan key cursor [MATCH pattern] [COUNT count]，sscan的第一个参数总是有序集合类型的key\n127.0.0.1:6379[2]\u0026gt; zadd myzadd1 1 zz1 2 zz2 3 zz3 (integer) 3 127.0.0.1:6379[2]\u0026gt; zrange myzadd1 0 -1 withscores 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; 127.0.0.1:6379[2]\u0026gt; zscan myzadd1 0 1) \u0026#34;0\u0026#34; 2) 1) \u0026#34;zz1\u0026#34; 2) \u0026#34;1\u0026#34; 3) \u0026#34;zz2\u0026#34; 4) \u0026#34;2\u0026#34; 5) \u0026#34;zz3\u0026#34; 6) \u0026#34;3\u0026#34; ","permalink":"https://shiziblog.cn/posts/tech/tech1/","summary":"1. 介绍 scan命令的作用和keys *的作用类似，主要用于查找redis中的键，但是在正式的生产环境中一般不会直接使用keys *这个命令，因为他会返回所有的键，如果键的数量很多会导致查询时间很长，进而导致服务器阻塞，所以需要scan来进行更细致的查找 scan总共有这几种命令：sca","title":"Redis scan命令学习"},{"content":"","permalink":"https://shiziblog.cn/posts/unclassified/test/","summary":"","title":""}]